 <%- include('../partial/admin/header.ejs') %>
                        
            <!-- content start -->
        <div class="content">
            <!-- Sale & Revenue Start -->
          <div class="container-fluid pt-4 px-4 mb-5" >
            <div class="row g-4">
                <div class="col-sm-6 col-xl-3">
                    <div class="bg-light rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fa fa-chart-line fa-3x text-primary"></i>
                        <div class="ms-3">
                            <p class="mb-2">Total Revenue</p>
                            <div class="d-flex flex-wrap justify-content-start align-items-center">
                                <h5 class="mb-0 font-weight-bold">totalrevenue</h5>
                                <p class="mb-0 ml-3 text-success font-weight-bold">+8.97%</p>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="col-sm-6 col-xl-3">
                    <div class="bg-light rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fa fa-chart-bar fa-3x text-primary"></i>
                        <div class="ms-3">
                            <p class="mb-2">Total Sales</p>
                            <div class="d-flex flex-wrap justify-content-start align-items-center">
                                <h5 class="mb-0 font-weight-bold">ordercout</h5>
                                <p class="mb-0 ml-3 text-success font-weight-bold">+2.45%</p>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="col-sm-6 col-xl-3">
                    <div class="bg-light rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fa fa-chart-area fa-3x text-primary"></i>
                        <div class="ms-3">
                            <p class="mb-2">Members</p>
                            <div class="d-flex flex-wrap justify-content-start align-items-center">
                                <h5 class="mb-0 font-weight-bold">usercount</h5>
                                <p class="mb-0 ml-3 text-success font-weight-bold"> +6.45%</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-xl-3">
                    <div class="bg-light rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fa fa-chart-pie fa-3x text-primary"></i>
                        <div class="ms-3">
                            <p class="mb-2">Blocked Members</p>
                              <div class="d-flex flex-wrap justify-content-start align-items-center">
                                <h5 class="mb-0 font-weight-bold">blockeduser</h5>
                                <p class="mb-0 ml-3 text-danger font-weight-bold">Ban Users</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
          </div>
            <!-- Sale & Revenue End -->

            <!-- Dash board statrt -->
             <!--cahrt  -->
             <div class="mb-3">
              <select id="filterSelect" class="form-select" style="color: green; font-weight: bold;">
                  <option >Filter by</option>
                  <option value="weekly">Weekly</option>
                  <option value="monthly">Monthly</option>
                  <option value="yearly">Yearly</option>
              </select>
          </div>
             <div class="row mb-5">
              <div class="col-sm-12 col-md-6">
                <div  style="height: 400px;">
                  <div class="card-header">
                    <h3>Sales Report</h3>
                  </div>
                    <canvas id="salesChart"  data-order-count="<%= orderCount %> "  ></canvas>
                </div>
              </div>
              <div class="col-sm-12 col-md-6 mb-5">
                <div  style="height: 400px;">
                  <div class="card-header ">
                      <h3>Best-Selling Categories</h3>
                    </div>
                    <canvas id="categorySalesChart"  width="100"  style="height: 400px;" ></canvas>
                  </div>
              </div>
            </div>

            <div class="row ">
              <div class="col-sm-12 col-md-12">
                <div  style="height: 400px; margin-top: 10px;">
                  <div class="card-header">
                      <h3>Best-Selling Products</h3>
                    </div>
                    <canvas id="productSalesChart"  width="1000"  style="height: 300px;" ></canvas>
                </div>           
              </div>
            </div>

            
             <!-- <select id="filter" onchange="updateChart()">
              <option value="yearly">Yearly</option>
              <option value="monthly">Monthly</option>
            </select> -->


          <div class="dashboard pt-4 ">
            <!-- Latest Orders Section -->
            <div class="card orders">
              <h2>Recent Orders</h2>
              <table>
                <thead>
                  <tr>
                    <th>Order id</th>
                    <th>Date</th>
                    <th>Status</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% latesOrders.forEach((order)=>{ %>
                    <tr>
                      <td> <%= order._id %></td>
                      <td><%= order.date.toLocaleString() %></td>
                      <td><span ><%= order.orderStatus %></span></td>
                      <td><a href="#">View</a></td>
                    </tr>
                <% }) %>                            
                </tbody>
              </table>
              <button>View All Orders</button>
            </div>
        
            <!-- Recent Members Section -->
            <div class="card members">
              <h2>Recent Members</h2>
              <table>
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Email</th>
                </tr>
              </thead>
              <tbody>
                <% latestMembers.forEach(member=>{ %>
                <tr>
                  <td><a href="#"><%= member.Username %></a></td>
                  <td><%=  member.Email %></td>
                </tr>
                <% }) %>
                   <!-- <div class="card members"> -->
              </tbody>
            </table>
              <button>View All Members</button>
            </div>
            <!-- recenent memner end -->
          </div>
          <!-- dashboard end -->
        </div>
             <!-- contend end -->
      </div>
      <!-- main container end -->
     
       <!-- footer -->
      <footer class=" footer_section">
        <div class="container">
          <p>
            &copy; <span id="displayYear"></span> All Rights Reserved By
            <a href="#">GIFTOS</a>
          </p>
        </div>
      </footer>
     <!-- </div>     -->
      <script src="js/jquery-3.4.1.min.js"></script>
      <script src="js/bootstrap.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js"></script>
      <script src="js/custom.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
      <script>
async function fetchSaleReport() {
    let myChart;

    // Function to fetch and render chart data
    async function renderChart(filter = null) {
        const query = filter ? `?filter=${filter}` : '';
        const response = await fetch(`/admin/sales-data${query}`);
        const salesData = await response.json();

        // Prepare data for the chart
        const labels = salesData.map(item => item._id); // The x-axis labels (e.g., months, weeks)
        const dataPoints = salesData.map(item => item.totalSales); // The y-axis data
        const totalDiscount = salesData.map(item => item.totalDicount);
        const totalOrders = salesData.map(item => item.orderCount);

        console.log('Filter:', filter || 'Initial Load');
        console.log('Total Orders:', totalOrders);
        console.log('Data Points:', dataPoints);

        // Destroy the existing chart if it exists
        if (myChart) {
            console.log('Chart is already loaded, destroying it.');
            myChart.destroy();
        }

        // Render the chart
        const ctx = document.getElementById('salesChart').getContext('2d');
        myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Total Sales',
                        data: dataPoints,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1,
                        barPercentage: 0.4, // Adjust bar width
                    },
                    {
                        label: 'Total Discount',
                        data: totalDiscount,
                        backgroundColor: 'rgba(255, 99, 132, 0.8)', // Red
                        borderWidth: 1,
                        barPercentage: 0.4, // Adjust bar width
                    },
                ],
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                    },
                },
            },
        });
    }

    // Render the initial chart data when the page loads
    await renderChart();

    // Attach the event listener for filter selection
    document.getElementById('filterSelect').addEventListener('change', async function () {
        const filter = this.value;
        await renderChart(filter);
    });
}

fetchSaleReport();

      

      async function fetchTopProductsChart() {
          try {
              const response = await fetch('/admin/top-products'); // Ensure this matches your backend route
              const data = await response.json();

              // Extract product names and sales data
              const productNames = data.map(product => product.productDetails.Productname || "Unknown Product");
              const sales = data.map(product => product.totalSales);

              // Render the chart
              const ctx = document.getElementById('productSalesChart').getContext('2d');
              new Chart(ctx, {
                  type: 'bar', // Bar chart
                  data: {
                      labels: productNames, // Product names as x-axis labels
                      datasets: [{
                          label: 'Product-wise Sales',
                          data: sales, // Sales data as y-axis values
                          backgroundColor: 'rgba(75, 192, 75, 0.2)', // Light green background
                          borderColor: 'rgba(75, 192, 75, 1)', // Dark green border
                          borderWidth: 1,
                          categoryPercentage: 0.8, // Adjust category width
                          barPercentage: 0.4, // Adjust bar width
                      }]
                  },
                  options: {
                      responsive: true,
                      layout: {
                            padding: {
                                left: 10,
                                right: 10,
                                top: 10,
                                bottom: 50, // Add space for x-axis labels
                            },
                        },
                      scales: {
                          y: {
                              beginAtZero: true,
                              title: {
                                  display: true,
                                  text: 'Sales Count',
                              },
                          },
                          x: {
                              title: {
                                  display: true,
                                  text: 'Products',
                              },
                              ticks: {
                                  maxRotation: 0, // Ensures the labels are straight
                                  minRotation: 0,
                                  autoSkip:false,
                                  font: {
                                    size: 10, // Smaller font for x-axis labels
                                  },
                              },
                          },
                      },
                  }
              });
          } catch (error) {
              console.error("Error fetching top products:", error);
          }
        }

// Call the function to fetch and display chart
      fetchTopProductsChart();

      fetch('/admin/categoryChart') // Update the route as needed
        .then(response => response.json())
        .then(data => {
            const categories = data.map(item => item._id); 
            const sales = data.map(item => item.totalSales); 

            // Render chart
            const ctx = document.getElementById('categorySalesChart').getContext('2d');
            new Chart(ctx, {
                  type: 'pie', // Bar chart
                  data: {
                      labels: categories, // Product names as x-axis labels
                      datasets: [{
                          label: 'Category-wise Sales',
                          data: sales, // Sales data as y-axis values
                          backgroundColor: 'rgba(75, 192, 75, 0.2)', // Light green background
                          borderColor: 'rgba(75, 192, 75, 1)', // Dark green border
                          borderWidth: 1,
                          // categoryPercentage: 0.8,
                          barPercentage: 0.4, // Adjust bar width
                      }]
                  },
                  options: {
                      responsive: true,
                      scales: {
                          y: {
                              beginAtZero: true,
                              title: {
                                  display: true,
                                  text: 'Sales Count',
                              },
                          },
                          x: {
                              title: {
                                  display: true,
                                  text: 'Categories',
                              },
                              ticks: {
                                  maxRotation: 0, // Ensures the labels are straight
                                  minRotation: 0,
                                  autoSkip:false,
                                  font: {
                                    size: 10, // Smaller font for x-axis labels
                                  },
                              },
                          },
                      },
                  }
              });
        })
        .catch(err => console.error('Error fetching sales data:', err));

      
      
      </script>



      

    </body>
  </html>